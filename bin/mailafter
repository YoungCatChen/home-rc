#!/bin/bash

#################### Configuration ####################
set -o errexit
to_addr_file="$HOME/.mailafter_toaddr"
send_exec="$HOME/.mailafter_send"
stdout_file="/tmp/mailafter-$$.out"
stderr_file="/tmp/mailafter-$$.err"
cur_dir="`pwd`"


#################### Getting the cmdline ####################
if [ -z "$*" ]; then
  echo "$0: no command to run." >&2
  exit 2
fi
cmdline="$*"
date_str=`date "+%Y-%m-%d %H:%M:%S"`

#################### Setting subject of mail ####################
if [ -z "${cmdline##echo *}" ]; then
  subject="${cmdline#echo } ($date_str)"
else
  subject="Job $date_str: $cmdline"
fi

#################### Get to_addr if any ####################
if [ -f "$to_addr_file" -a -r "$to_addr_file" ]; then
  read to_addr < "$to_addr_file"
fi

#################### Determine how to send mail ####################
# if [ "$SENDCMD" ]; then
#   true
# elif [ -f "$send_exec" ]; then
#   SENDCMD='. "$send_exec"'
# else
#   if [ -z "$to_addr" ]; then
#     echo "$0: $to_addr_file does not exist or is empty." >&2
#     exit 2
#   fi
#   if ! command -v sendmail > /dev/null; then
#     echo "$0: sendmail(1) not found. Please install it." >&2
#     exit 2
#   fi
#   SENDCMD='htmlmail'
# fi


#################### Run ####################
clean_up() {
  rm -f "$stdout_file" "$stderr_file"
}
set +o errexit
trap 'clean_up' EXIT
trap 'exit 130' SIGINT

eval "$@" > >(tee "$stdout_file") 2> >(tee "$stderr_file" >&2)

return_val="$?"
date_str2=`date "+%Y-%m-%d %H:%M:%S"`
trap - SIGINT

#################### Waiting for sending mail ####################
exec >&2
echo
echo "Sending mail to $to_addr..."
echo 'Press CTRL+C to abort.'

trap 'echo "Sending mail cancelled."; exit $return_val' SIGINT
sleep 1.5
trap - SIGINT

#################### Preparing to send the mail ####################
pre_tag='<pre style="font-family: Consolas, Courier New, Courier, monospace">'

mail_header() {
  eval `locale`
  echo 'Mime-Version: 1.0'
  echo "Content-Type: text/html; charset=${LC_CTYPE#*.}"
  echo "Subject: $subject"
  echo "To: $to_addr"
  echo
}

mail_body() {
  echo -en '\033[1;34m'
  echo "Job command:  $cmdline"
  echo "Working dir:  $cur_dir"
  echo "Started at:   $date_str"
  echo "Ended at:     $date_str2"

  [ "$return_val" = 0 ] && echo -en '\033[1;32m' || echo -en '\033[1;31m'
  echo "Return value: $return_val"

  echo -e '\033[1;35m'
  echo "@@@@@@@@@@@@@@@@@@"
  echo "@@@@@ stdout @@@@@"
  echo "@@@@@@@@@@@@@@@@@@"
  echo -e '\033[m'
  remove_backspace "$stdout_file"

  echo -e '\033[1;35m'
  echo "@@@@@@@@@@@@@@@@@@"
  echo "@@@@@ stderr @@@@@"
  echo "@@@@@@@@@@@@@@@@@@"
  echo -e '\033[m'
  remove_backspace "$stderr_file"

  for ARG in "$@"; do
    echo -e '\033[1;35m'
    echo "@@@@@@@${ARG//?/@}@@@@@@"
    echo "@@@@@ $ARG @@@@@@"
    echo "@@@@@@@${ARG//?/@}@@@@@@"
    echo -e '\033[m'

    if [ -r "$ARG" -a -f "$ARG" ]; then
      TYPE="`file -L --mime-type "$ARG"`"

      if [ "${TYPE// text\//}" != "$TYPE" ]; then
        head -c 102400 "$ARG"
      else
        echo "[Not a text file]"
      fi
    else
      echo "[Not a file or no permisson]"
    fi

    echo
  done
}

remove_backspace() {
  awk '{
    gsub(/\r/, "");
    for(i=0; i<20; ++i)
      gsub(/[^\x8]\x8/, "");
    print;
  }' "$@"
}

aha_wrap() {
  if command -v aha > /dev/null; then
    aha -l -t "$subject" | sed "s/<pre>/$pre_tag/"
  else
    echo "<html><body>$pre_tag"
    sed -e $'s/&/\&amp;/g; s/"/\&quot;/g; s/</\&lt;/g; s/>/\&gt;/g; s/\x1b\[[^A-Za-z]*[A-Za-z]//g' -e "s/'/\&#039;/g;"
    echo '</pre></body></html>'
  fi
}

#################### Send the mail ####################
set -o errexit

{
  mail_header
  mail_body "$@" | aha_wrap
} | sendmail "$to_addr"

if [ $? -eq 0 ]; then
  echo "Mail sent." >&2
else
  echo "Sending mail failed." >&2
fi

exit $return_val
